{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Card","props","result","name","value","className","App","state","handleChange","e","input","target","isNaN","setState","type","onChange","this","placeholder","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6QAqCA,SAASA,EAAKC,GACZ,IAAIC,EAAS,EACb,OAAQD,EAAME,MACZ,IAAK,OACHD,EAASD,EAAMG,MAAQ,SACvB,MAEF,IAAK,WACHF,EAASD,EAAMG,MAAQ,OACvB,MAEF,IAAK,QACHF,EAAuB,GAAdD,EAAMG,MAOnB,OACE,sBAAKC,UAAS,eAAUJ,EAAME,MAA9B,UACE,+BAAKF,EAAME,KAAX,OACA,+BAAOD,OAKEI,M,4MA5DbC,MAAQ,CACNH,MAAO,I,EAGTI,aAAe,SAAAC,GACb,IAAMC,EAAQD,EAAEE,OAAOP,MACpBQ,MAAMF,IAET,EAAKG,SAAS,CACZT,MAAOM,K,uDAKT,OACE,sBAAKL,UAAU,MAAf,UACE,kDACA,uBACES,KAAK,OACLC,SAAUC,KAAKR,aACfJ,MAAOY,KAAKT,MAAMH,MAClBa,YAAY,WAEd,sBAAKZ,UAAU,SAAf,UACE,cAACL,EAAD,CAAMG,KAAK,OAAOC,MAAOY,KAAKT,MAAMH,QACpC,cAACJ,EAAD,CAAMG,KAAK,WAAWC,MAAOY,KAAKT,MAAMH,QACxC,cAACJ,EAAD,CAAMG,KAAK,QAAQC,MAAOY,KAAKT,MAAMH,kB,GA3B7Bc,IAAMC,WCSTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.dfd0369b.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  state = {\n    value: ''\n  }\n\n  handleChange = e => {\n    const input = e.target.value\n    if(isNaN(input)) return;\n\n    this.setState({\n      value: input\n    })\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <h1>Weight Converter</h1>\n        <input\n          type=\"text\" \n          onChange={this.handleChange}\n          value={this.state.value}\n          placeholder=\"Pounds\"\n        />\n        <div className=\"output\">\n          <Card name=\"Gram\" value={this.state.value} />\n          <Card name=\"Kilogram\" value={this.state.value} />\n          <Card name=\"Ounce\" value={this.state.value} />\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction Card(props) {\n  let result = 0;\n  switch (props.name) {\n    case \"Gram\":     \n      result = props.value / 0.0022046\n      break\n    \n    case \"Kilogram\":\n      result = props.value / 2.2046\n      break\n      \n    case \"Ounce\":\n      result = props.value * 16\n      break\n    \n    default: \n      break;\n  }\n\n  return(\n    <div className={`card ${props.name}`}>\n      <h3>{props.name}:</h3>\n      <span>{result}</span>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}